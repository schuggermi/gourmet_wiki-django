services:
  web:
    build: ./app
    command: gunicorn gourmet_wiki.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app:/app
      - static_volume:/app/staticfiles
      - assets_volume:/app/assets
      - media_volume:/app/media
    depends_on:
      - db
    restart: always
    networks:
      - gourmet-wiki_net
  emt:
    image: listmonk/listmonk:latest
    container_name: gourmet-wiki_emt
    restart: unless-stopped
    networks:
      - gourmet-wiki_net
    hostname: emt.gourmet-wiki.app
    depends_on:
      - db
    command: [ sh, -c, "./listmonk --install --idempotent --yes && ./listmonk --upgrade --yes --config '' && ./listmonk --config ''" ]
    environment:
      LISTMONK_app__address: 0.0.0.0:9000
      LISTMONK_db__user: ${EMT_POSTGRES_USER}
      LISTMONK_db__password: ${EMT_POSTGRES_PASSWORD}
      LISTMONK_db__database: ${EMT_POSTGRES_DB}
      LISTMONK_db__host: db
      LISTMONK_db__port: 5432
      LISTMONK_db__ssl_mode: disable
      LISTMONK_db__max_open: 25
      LISTMONK_db__max_idle: 25
      LISTMONK_db__max_lifetime: 300s
      TZ: Etc/UTC
      LISTMONK_ADMIN_USER: ${LISTMONK_ADMIN_USER:-}
      LISTMONK_ADMIN_PASSWORD: ${LISTMONK_ADMIN_PASSWORD:-}
    volumes:
      - ./uploads:/listmonk/uploads:rw
  db:
    image: postgres:17-alpine
    container_name: gourmet-wiki_db
    restart: unless-stopped
    networks:
      - gourmet-wiki_net
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      WEB_POSTGRES_DB: ${WEB_POSTGRES_DB}
      WEB_POSTGRES_USER: ${WEB_POSTGRES_USER}
      WEB_POSTGRES_PASSWORD: ${WEB_POSTGRES_PASSWORD}
      EMT_POSTGRES_DB: ${EMT_POSTGRES_DB}
      EMT_POSTGRES_USER: ${EMT_POSTGRES_USER}
      EMT_POSTGRES_PASSWORD: ${EMT_POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db" ]
      interval: 10s
      timeout: 5s
      retries: 6
    volumes:
      - ./db/init.sh:/docker-entrypoint-initdb.d/init.sh
      - type: volume
        source: gourmet-wiki_data
        target: /var/lib/postgresql/data
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/staticfiles
      - assets_volume:/app/assets
      - media_volume:/app/media
      - /home/deployer/certbot-webroot:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
    restart: always
    networks:
      - gourmet-wiki_net

volumes:
  static_volume:
  assets_volume:
  media_volume:
  certbot_webroot:
  gourmet-wiki_data:

networks:
  gourmet-wiki_net: