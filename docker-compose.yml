services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
    restart: always

  backend:
    build: ./app
    command: gunicorn gourmet_wiki.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app:/app
    env_file: .env
    depends_on:
      - db
    expose:
      - 8000
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/app.conf
      - static_volume:/static
      - media_volume:/media
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - backend
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot; done"
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
